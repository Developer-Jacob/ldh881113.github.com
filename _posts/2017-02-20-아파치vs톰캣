---
layout: post
title: "[공부하자] 아파치 VS 톰캣"
description: "아파치와 톰캣의 명확하지 못했던 부분에 대한 정리가 필요"
date: 2017-02-20
tags: [아파치, 톰캣, 공부하자, 서버, WAS]
comments: true
share: true
---
# 아파치 VS 톰캣

아파치와 톰캣에 대한 명확한 부분과 영역을 구분하기 위해 작성한다.
웹서버 개발에 접속하기 전에 아파치톰켓이 하나로 인식하고 있었다. 두개가 다르다면 두개를 같이 사용하는 이유는 무엇인지? 또한 두개가 무슨 차이가 있길레 함께 사용해야 하는 것인지 알아 보겠다.

## 아파치란
소프트웨어 단체의 이름으로 오픈소스, 웹서버 등등의 여러 가지 프로젝트를 진행하는 단체이다.
우리가 얘기하는 아파치는 이 단체에서 만든 Http 웹서버를 지칭한다. 이는 Http요청을 처리할 수 있는 웹서버를 뜻한다. 즉 GET, PUT, DELETE등의 메소드를 이용해 요청하면 어떤 결과를 돌려주는 서버라는 것이다.

## 톰캣이란
WAS라고 지칭하는 것이 톰캣이다. WAS(Web Application Server)는 웹 서버와 컨테이너의 결합으로 클라이언트의 요청에 따라 내부 프로그램을 통해 결과를 만들어 내고 이를 다시 클라이언트에 전달해 주는 역활을 하는 것이다. 아파치는 이 기능을 수행하지 못하기에 톰캣과 함께 사용하는 것이다. 물론 반대로 WAS가 웹 서버의 역활을 수행할 수 있긴하다. 하지만 기본적인 기능만 수행하고 있기 때문에 아파치를 연동해 다양한 웹 서버 기능을 수행하도록 한다.

1. 웹 서버, 아파치는 사용자의 요청을 받는 역활을 한다.
2. 이 요청이 jsp나 서블릿이라면 톰켓에게 넘긴다. Jsp/서블릿 컨테이너라고 불리는 이유가 여기있다.
3. html과 같은 정적인 부분은 아파치가 담당하고 이외의 동적인 컨테이너 부분은 톰켓에게 넘기고 톰켓이 이를 수행하면 다시 아파치가 받아 클라이언트에게 넘기는 역활을 한다.
	
## 결론 : 아파치는 jsp를 처리하지 못하기 때문에 jsp를 받아 was에 넘겨 처리하고 다시 결과 값을 아파치가 받아 클라이언트에게 넘겨주는 역활을 한다.

참조
 http://sungbine.github.io/tech/post/2015/02/15/tomcat%EA%B3%BC%20apache%EC%9D%98%20%EC%97%B0%EB%8F%99.html
http://hmgirl.tistory.com/67

 
